openapi: 3.0.0
info:
  title: "Trail Management API"
  description: "An API for managing trails with detailed properties"
  version: "1.0.0"

servers:
  - url: "/api"

components:
  schemas:
    Feature:
      type: object
      required:
        - trail_feature
        - Trail_ID
      properties:
        Trail_ID:
          type: integer
          description: "The ID of the trail (unique identifier)"
        trail_feature:
          type: string
          description: "The name of the feature"
    LocationPoint:
      type: object
      properties:
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        description:
          type: string
        Trail_ID:
          type: integer
        Order_no:
          type: integer

    Trail:
      type: "object"
      required:
        - Trail_name
        - Distance
        - Elevation
        - Owner_ID
      properties:

        Trail_name:
          type: "string"
          maxLength: 255
          description: "Name of the trail"
        Trail_summary:
          type: "string"
          nullable: true
          description: "A brief summary of the trail"
        Trail_Description:
          type: "string"
          nullable: true
          description: "A detailed description of the trail"
        Difficulty:
          type: "string"
          nullable: true
          description: "The difficulty level of the trail (e.g., easy, moderate, hard)"
        Location:
          type: "string"
          nullable: true
          description: "The location of the trail"
        Distance:
          type: "integer"
          description: "The length of the trail in kilometers"
        Elevation:
          type: "integer"
          description: "The elevation of the trail in meters"
        Route_Type:
          type: "string"
          nullable: true
          description: "Type of route (e.g., loop, out & back, point-to-point)"
        Owner_ID:
          type: "integer"
          description: "The ID of the owner associated with the trail"
    TrailView:
      type: "object"
      required:
        - Trail_name
        - Distance
        - Elevation
        - Owner_ID
      properties:

        Trail_name:
          type: "string"
          maxLength: 255
          description: "Name of the trail"
        Trail_summary:
          type: "string"
          nullable: true
          description: "A brief summary of the trail"
        Trail_Description:
          type: "string"
          nullable: true
          description: "A detailed description of the trail"
        Difficulty:
          type: "string"
          nullable: true
          description: "The difficulty level of the trail (e.g., easy, moderate, hard)"
        Location:
          type: "string"
          nullable: true
          description: "The location of the trail"
        Distance:
          type: "integer"
          description: "The length of the trail in kilometers"
        Elevation:
          type: "integer"
          description: "The elevation of the trail in meters"
        Route_Type:
          type: "string"
          nullable: true
          description: "Type of route (e.g., loop, out & back, point-to-point)"
        Owner_ID:
          type: "integer"
          description: "The ID of the owner associated with the trail"
        LocationPoints:
          type: array
          items:
            $ref: "#/components/schemas/LocationPoint"
          description: "List of location points associated with this trail"
    LocationPointUpdate:
      type: object
      properties:
        latitude:
          type: integer
          description: "Latitude value of the location point"
        longitude:
          type: integer
          description: "Longitude value of the location point"
        description:
          type: string
          description: "Description of the location point"

  parameters:
    feature_id:
      name: feature_id
      in: path
      required: true
      description: "The ID of the feature to retrieve or modify"
      schema:
        type: integer
    trail_id:
      name: "trail_id"
      description: "ID of the trail"
      in: path
      required: true
      schema:
        type: "integer"


paths:
  /trails:
    get:
      operationId: "trails.read_all"
      tags:
        - Trails
      summary: "Retrieve all trails and loc points"
      responses:
        "200":
          description: "Successfully retrieved the list of trails"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Trail"
    post:
      operationId: "trails.create"
      tags:
        - Trails
      summary: "Create a new trail"
      requestBody:
        description: "Trail to create"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trail"
        x-body-name: trail
      responses:
        "201":
          description: "Successfully created a trail"

  /trails/{trail_id}:
    get:
      operationId: "trails.read_one"
      tags:
        - Trails
      summary: "Retrieve a specific trail by its ID and loc points"
      parameters:
        - $ref: "#/components/parameters/trail_id"
      responses:
        "200":
          description: "Successfully retrieved trail"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trail"
    put:
      operationId: "trails.update"
      tags:
        - Trails
      summary: "Update a trail by its ID"
      parameters:
        - $ref: "#/components/parameters/trail_id"
      requestBody:
        description: "Updated trail data"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trail"
        x-body-name: trail
      responses:
        "200":
          description: "Successfully updated trail"
    delete:
      operationId: "trails.delete"
      tags:
        - Trails
      summary: "Delete a trail by its ID"
      parameters:
        - $ref: "#/components/parameters/trail_id"
      responses:
        "204":
          description: "Successfully deleted trail"
  /location_point:
    post:
      summary: Create a new location point
      operationId: "locationPoint.create"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPoint'
        x-body-name: locationPoint
      responses:
        201:
          description: Location Point created successfully
        400:
          description: Request body is missing location point data
        406:
          description: Order Number already exists in the Trail
#  ---
  /location_point/{locationPoint_id}:
    put:
      summary: Update a location point by ID
      operationId: "locationPoint.update"
      parameters:
        - name: locationPoint_id
          in: path
          description: "The ID of the location point to update"
          required: true
          schema:
            type: integer
      requestBody:
        description: Data to update in the location point
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationPointUpdate'
        x-body-name: locationPoint
      responses:
        200:
          description: Location point updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationPoint"
        400:
          description: Missing or invalid request body
        404:
          description: Location point not found
    delete:
      summary: Delete a location point by ID
      operationId: "locationPoint.delete"
      parameters:
        - name: locationPoint_id
          in: path
          description: "The ID of the location point to delete"
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Location point deleted successfully
        404:
          description: Location point not found
  /features:
    get:
      summary: "Retrieve all features"
      description: "Fetch a list of all features in the system."
      tags:
        - Features
      operationId: "Features.read_all"
      responses:
        "200":
          description: "A list of features"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Feature"
        "404":
          description: "No features found"

    post:
      summary: "Create a new feature"
      description: "Adds a new feature to the database with provided details."
      tags:
        - Features
      operationId: "Features.create"
      requestBody:
        description: "JSON object containing the feature data"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
        x-body-name: feature
      responses:
        "201":
          description: "Feature successfully created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
        "400":
          description: "Invalid request payload"

  /features/{feature_id}:
    get:
      summary: "Retrieve a specific feature by ID"
      description: "Fetch detailed information about a specific feature using its ID."
      tags:
        - Features
      operationId: "Features.read_one"
      parameters:
        - $ref: "#/components/parameters/feature_id"
      responses:
        "200":
          description: "Feature details"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
        "404":
          description: "Feature not found for the given ID"
    put:
      summary: "Update a feature by ID"
      description: "Modifies an existing feature with new details."
      tags:
        - Features
      operationId: "Features.update"
      parameters:
        - $ref: "#/components/parameters/feature_id"
      requestBody:
        description: "JSON object with updated feature data"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Feature"
        x-body-name: feature
      responses:
        "200":
          description: "Feature successfully updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Feature"
        "400":
          description: "Invalid input or request body"
        "404":
          description: "Feature not found for the given ID"
    delete:
      summary: Delete a feature
      description: Deletes a feature from the database by its unique ID.
      tags:
        - Features
      operationId: Features.delete
      parameters:
        - name: feature_id
          in: path
          required: true
          description: The unique identifier of the feature to delete.
          schema:
            type: integer
      responses:
        '200':
          description: Successfully deleted the feature
        '404':
          description: Feature not found

